#!/usr/bin/env python
"""
Gossip: log files proccessing.
"""
import sys
import grp
import pwd
import daemon
import lockfile
import argparse

from gossip.config import Config
from gossip.worker import do_work


if __name__ == '__main__':
    # parse command line arguments
    argparser = argparse.ArgumentParser(prog='gossip',
                                        description='Log files proccessing')
    argparser.add_argument('-d', '--daemonize', action='store_true',
                           help='daemonize')
    argparser.add_argument('-u', '--user', help='user name or id')
    argparser.add_argument('-g', '--group', help='group name or id')
    argparser.add_argument('-p', '--pid', help='pid file')
    argparser.add_argument('config', help='config file')
    args = argparser.parse_args()

    # parse gossip config
    config = Config(args.config)

    if args.daemonize:
        # going crazy
        user_id = 0
        group_id = 0
        pidfile = None

        # get user id from user name. root by default
        if args.user is not None:
            try:
                user_id = pwd.getpwnam(args.user).pw_uid
            except KeyError:
                print "User '%s' is not found." % args.user
                sys.exit(1)

        # get group id from group name. root group (wheel?) by default
        if args.group is not None:
            try:
                group_id = grp.getgrnam(args.group).gr_gid
            except KeyError:
                print "Group '%s' is not found." % args.group
                sys.exit(1)

        # create lockfile if defined
        if args.pid is not None:
            pidfile = lockfile.FileLock(args.pid)

        # create daemon context
        context = daemon.DaemonContext(
            working_directory='/',
            uid=user_id,
            gid=group_id,
            pidfile=pidfile
        )

        # do work with daemonizing
        with context:
            do_work(config, daemonize=True)
    else:
        # do work without daemonizing
        do_work(config, daemonize=False)
